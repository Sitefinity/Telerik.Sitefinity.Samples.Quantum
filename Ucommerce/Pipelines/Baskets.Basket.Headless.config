<configuration>
	<components>
		
		<!-- Pipeline Instance -->
		<component id="NewBasket"
				   service="Ucommerce.Pipelines.IPipeline`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.BasketV2Pipeline, Ucommerce.Pipelines">
			<parameters>
				<tasks>
					<array>
						<value>${NewBasket.SetCultureCode}</value>

						<!-- Removes generated orderlines (free gifts) -->
						<value>${NewBasket.RemoveGeneratedOrderlines}</value>

						<!-- Remove all discounts and resets the totals -->
						<value>${NewBasket.RemoveAllDiscountsFromOrder}</value>
						<value>${NewBasket.CalculateOrderLinesUnitDiscounts}</value>
						<value>${NewBasket.CalculateOrderDiscount}</value>
						<value>${NewBasket.CalculateOrderLinesDiscounts}</value>
						<value>${NewBasket.CalculateShippingDiscounts}</value>

						<!-- Reset remaing discount-->
						<value>${NewBasket.CalculateOrderSubTotal}</value>

						<!-- Calculate shipping fees and tax -->
						<value>${NewBasket.CalculateShippingCostForShipments}</value>
						<value>${NewBasket.CalculateShippingTaxForShipments}</value>
						<value>${NewBasket.CalculateShippingTotalForShipments}</value>

						<!-- Calculate tax for order lines based on original unit prices -->
						<value>${NewBasket.CalculateOrderLineTax}</value>

						<!-- Reset the order lines tax rate-->
						<value>${NewBasket.CalculateOrderLineTaxRate}</value>

						<!-- Calculate totals for order lines and order based on original prices -->
						<value>${NewBasket.CalculateOrderLinesTotals}</value>
						<value>${NewBasket.CalculateShippingTotal}</value>
						<value>${NewBasket.CalculatePaymentTotal}</value>

						<!-- Reset the order totals-->
						<value>${NewBasket.CalculateVATTotal}</value>
						<value>${NewBasket.CalculateOrderDiscountTotal}</value>
						<value>${NewBasket.CalculateOrderTaxTotal}</value>
						<value>${NewBasket.CalculateOrderTotal}</value>

						<!-- Apply discounts -->
						<value>${NewBasket.ApplyAwards}</value>

						<!-- Calculate order level discount total based on applied discounts -->
						<value>${NewBasket.CalculateOrderLinesUnitDiscounts}</value>

						<!-- Calculcate order line discounts based on applied discounts -->
						<value>${NewBasket.CalculateOrderDiscount}</value>
						<value>${NewBasket.CalculateOrderLinesDiscounts}</value>

						<!--Ensures that the order line Discout exceed the order line total-->
						<value>${NewBasket.EnsureOrderLinesDiscountNotExceedTheOrderLinesTotal}</value>

						<!-- Calculate total value of items excluding taxes -->
						<value>${NewBasket.CalculateOrderSubTotal}</value>

						<!-- Ensures that the order level discounts doesn't exceed the sub total and prevents negative order totals -->
						<value>${NewBasket.EnsureOrderDiscountsDoesNotExceedOrderSubTotal}</value>

						<!-- Shipping taxes and totals need to be recalculated if discounts are applied to shipments -->
						<value>${NewBasket.CalculateShippingDiscounts}</value>
						<value>${NewBasket.CalculateShippingTaxForShipments}</value>
						<value>${NewBasket.CalculateShippingTotalForShipments}</value>

						<!-- Recalculate tax for order lines based on reduced unit prices -->
						<value>${NewBasket.CalculateOrderLineTax}</value>

						<!-- Calculate payment fee, tax and amount  -->
						<value>${NewBasket.CalculatePaymentFee}</value>
						<value>${NewBasket.CalculatePaymentTax}</value>
						<value>${NewBasket.CalculatePaymentAmount}</value>

						<!-- Calculate totals for order lines and order -->
						<value>${NewBasket.CalculateOrderLinesTotals}</value>
						<value>${NewBasket.CalculateShippingTotal}</value>
						<value>${NewBasket.CalculatePaymentTotal}</value>

						<value>${NewBasket.CalculateVATTotal}</value>
						<value>${NewBasket.CalculateOrderDiscountTotal}</value>

						<value>${NewBasket.CalculateOrderTaxTotal}</value>
						<value>${NewBasket.CalculateOrderTotal}</value>
						<value>${NewBasket.RoundUpOrderTotalForCurrenciesWithoutDecimalDigits}</value>

						<value>${NewBasket.CleanUp}</value>
						<value>${NewBasket.Save}</value>
					</array>
				</tasks>
			</parameters>
		</component>

		<!-- Pipeline Tasks-->
		<component id="NewBasket.RemoveGeneratedOrderlines"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.RemoveGeneratedOrderlines, Ucommerce.Pipelines" />

		<component id="NewBasket.RemoveAllDiscountsFromOrder"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.RemoveAllDiscountsFromOrderTask, Ucommerce.Pipelines" />

		<component id="NewBasket.CleanUp"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CleanUpTask, Ucommerce.Pipelines" />

		<component id="NewBasket.ConvertOrderLevelDiscountsToOrderLinesDiscount"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.ConvertOrderLevelDiscountsToOrderLinesDiscount, Ucommerce.Pipelines" />

		<component id="NewBasket.ApplyAwards"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.ApplyAwardsTask, Ucommerce.Pipelines" />

		<component id="NewBasket.SetCultureCode"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.SetCultureCodeTask, Ucommerce.Pipelines" />

		<component id="NewBasket.CalculateOrderLinesUnitDiscounts"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateOrderLinesUnitDiscountsTask, Ucommerce.Pipelines" />

		<component id="NewBasket.CalculateShippingDiscounts"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateShippingDiscountTask, Ucommerce.Pipelines" />

		<component id="NewBasket.CalculateOrderLinesDiscounts"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateOrderLinesDiscountsTask, Ucommerce.Pipelines" />

		<component id="NewBasket.EnsureOrderLinesDiscountNotExceedTheOrderLinesTotal"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.EnsureOrderLinesDiscountNotExceedTheOrderLinesTotalTask, Ucommerce.Pipelines" />

		<component id="NewBasket.EnsureOrderDiscountsDoesNotExceedOrderSubTotal"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.EnsureOrderDiscountsDoesNotExceedOrderSubTotal, Ucommerce.Pipelines" />

		<component id="NewBasket.CalculateOrderLinesTotals"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateOrderLineTotalsTask, Ucommerce.Pipelines" />

		<component id="NewBasket.CalculateShippingTaxForShipments"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateShippingTaxForShipmentsTask, Ucommerce.Pipelines" />

		<component id="NewBasket.CalculateShippingCostForShipments"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateShippingCostForShipmentsTask, Ucommerce.Pipelines" />

		<component id="NewBasket.CalculateShippingTotalForShipments"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateShippingTotalForShipmentsTask, Ucommerce.Pipelines" />

		<component id="NewBasket.CalculateShippingTotal"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateShippingTotalTask, Ucommerce.Pipelines" />

		<component id="NewBasket.CalculatePaymentTotal"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculatePaymentTotalTask, Ucommerce.Pipelines" />

		<component id="NewBasket.CalculateOrderLineTax"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateOrderLineTaxTask, Ucommerce.Pipelines" />

		<component id="NewBasket.CalculateVATTotal"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateOrderVatTotalTask, Ucommerce.Pipelines" />

		<component id="NewBasket.CalculateOrderDiscount"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateOrderDiscountTask, Ucommerce.Pipelines" />

		<component id="NewBasket.CalculateOrderDiscountTotal"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateOrderDiscountTotalTask, Ucommerce.Pipelines" />

		<component id="NewBasket.CalculateOrderSubTotal"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateOrderSubTotalTask, Ucommerce.Pipelines" />

		<component id="NewBasket.CalculateOrderTaxTotal"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateOrderTaxTotalTask, Ucommerce.Pipelines" />

		<component id="NewBasket.CalculateOrderTotal"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateOrderTotalTask, Ucommerce.Pipelines" />

		<component id="NewBasket.RoundUpOrderTotalForCurrenciesWithoutDecimalDigits"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.RoundUpOrderTotalForCurrenciesWithNoDecimalDigitsTask, Ucommerce.Pipelines" />

		<component id="NewBasket.CalculateOrderLineTaxRate"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateOrderLineTaxRateTask, Ucommerce.Pipelines" />

		<component id="NewBasket.Save"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Common.SavePurchaseOrderTask, Ucommerce.Pipelines" />

		<component id="NewBasket.CalculatePaymentFee"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculatePaymentFeeTask, Ucommerce.Pipelines" />

		<component id="NewBasket.CalculatePaymentTax"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculatePaymentTaxTask, Ucommerce.Pipelines" />

		<component id="NewBasket.CalculatePaymentAmount"
		           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.Pipelines.IPipelineArgs`2[[Ucommerce.Pipelines.Basket.BasketRequest, Ucommerce],[Ucommerce.Pipelines.Basket.BasketResponse, Ucommerce]], Ucommerce]], Ucommerce"
		           type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculatePaymentAmountTask, Ucommerce.Pipelines" />
  </components>
</configuration>