<configuration>
	<components>
		<!-- Pipeline Instance -->
		<component id="Basket"
				   service="Ucommerce.Pipelines.IPipeline`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Transactions.Baskets.Basket.BasketPipeline, Ucommerce.Pipelines">
			<parameters>
				<tasks>
					<array>
						<value>${Basket.SetCultureCode}</value>
						
						<!-- Removes generated orderlines (free gifts) -->
						<value>${Basket.RemoveGeneratedOrderlines}</value>
						
						<!-- Remove all discounts and resets the totals -->
						<value>${Basket.RemoveAllDiscountsFromOrder}</value>
						<value>${Basket.CalculateOrderLinesUnitDiscounts}</value>
						<value>${Basket.CalculateOrderDiscount}</value>
						<value>${Basket.CalculateOrderLinesDiscounts}</value>
						<value>${Basket.CalculateShippingDiscounts}</value>
						
						<!-- Reset remaing discount-->
						<value>${Basket.CalculateOrderSubTotal}</value>
						
						<!-- Calculate shipping fees and tax -->
						<value>${Basket.CalculateShippingCostForShipments}</value>
						<value>${Basket.CalculateShippingTaxForShipments}</value>
						<value>${Basket.CalculateShippingTotalForShipments}</value>
						
						<!-- Calculate tax for order lines based on original unit prices -->
						<value>${Basket.CalculateOrderLineTax}</value>

						<!-- Reset the order lines tax rate-->
						<value>${Basket.CalculateOrderLineTaxRate}</value>

						<!-- Calculate totals for order lines and order based on original prices -->
						<value>${Basket.CalculateOrderLinesTotals}</value>
						<value>${Basket.CalculateShippingTotal}</value>
						<value>${Basket.CalculatePaymentTotal}</value>

						<!-- Reset the order totals-->
						<value>${Basket.CalculateVATTotal}</value>
						<value>${Basket.CalculateOrderDiscountTotal}</value>
						<value>${Basket.CalculateOrderTaxTotal}</value>
						<value>${Basket.CalculateOrderTotal}</value>

						<!-- Apply discounts -->
						<value>${Basket.ApplyAwards}</value>

						<!-- Calculate order level discount total based on applied discounts -->
						<value>${Basket.CalculateOrderLinesUnitDiscounts}</value>
						
						<!-- Calculcate order line discounts based on applied discounts -->
						<value>${Basket.CalculateOrderDiscount}</value>
						<value>${Basket.CalculateOrderLinesDiscounts}</value>

						<!--Ensures that the order line Discout exceed the order line total-->
						<value>${Order.EnsureOrderLinesDiscountNotExceedTheOrderLinesTotal}</value>
						
						<!-- Calculate total value of items excluding taxes -->
						<value>${Basket.CalculateOrderSubTotal}</value>

            <!-- Ensures that the order level discounts doesn't exceed the sub total and prevents negative order totals -->
            <value>${Basket.EnsureOrderDiscountsDoesNotExceedOrderSubTotal}</value>

						<!-- Shipping taxes and totals need to be recalculated if discounts are applied to shipments -->
						<value>${Basket.CalculateShippingDiscounts}</value>
						<value>${Basket.CalculateShippingTaxForShipments}</value>
						<value>${Basket.CalculateShippingTotalForShipments}</value>

						<!-- Recalculate tax for order lines based on reduced unit prices -->
						<value>${Basket.CalculateOrderLineTax}</value>
            
            <!-- Calculate payment fee, tax and amount  -->
            <value>${Basket.CalculatePaymentFee}</value>
            <value>${Basket.CalculatePaymentTax}</value>
            <value>${Basket.CalculatePaymentAmount}</value>

						<!-- Calculate totals for order lines and order -->
						<value>${Basket.CalculateOrderLinesTotals}</value>
						<value>${Basket.CalculateShippingTotal}</value>
						<value>${Basket.CalculatePaymentTotal}</value>

						<value>${Basket.CalculateVATTotal}</value>
						<value>${Basket.CalculateOrderDiscountTotal}</value>

						<value>${Basket.CalculateOrderTaxTotal}</value>
						<value>${Basket.CalculateOrderTotal}</value>
						<value>${Basket.RoundUpOrderTotalForCurrenciesWithoutDecimalDigits}</value>

						<value>${Basket.CleanUp}</value>
						<value>${Basket.Save}</value>
					</array>
				</tasks>
			</parameters>
		</component>
		
		<!-- Pipeline Tasks-->
		<component id="Basket.RemoveGeneratedOrderlines"
				   service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Transactions.Baskets.Basket.RemoveGeneratedOrderlines, Ucommerce.Pipelines" />

		<component id="Basket.RemoveAllDiscountsFromOrder"
				   service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Transactions.Baskets.Basket.RemoveAllDiscountsFromOrderTask, Ucommerce.Pipelines" />
		
		<component id="Basket.CleanUp"
				   service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CleanUpTask, Ucommerce.Pipelines" />

		<component id="Basket.ConvertOrderLevelDiscountsToOrderLinesDiscount"
					service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
					type="Ucommerce.Pipelines.Transactions.Baskets.Basket.ConvertOrderLevelDiscountsToOrderLinesDiscount, Ucommerce.Pipelines"/>
		
		<component id="Basket.ApplyAwards"
				   service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Transactions.Baskets.Basket.ApplyAwardsTask, Ucommerce.Pipelines" />
		
		<component id="Basket.SetCultureCode"
				   service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Transactions.Baskets.Basket.SetCultureCodeTask, Ucommerce.Pipelines" />
		
		<component id="Basket.CalculateOrderLinesUnitDiscounts"
				   service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateOrderLinesUnitDiscountsTask, Ucommerce.Pipelines" />
		
		<component id="Basket.CalculateShippingDiscounts"
				   service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateShippingDiscountTask, Ucommerce.Pipelines" />
		
		<component id="Basket.CalculateOrderLinesDiscounts"
				   service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateOrderLinesDiscountsTask, Ucommerce.Pipelines" />

		<component id="Order.EnsureOrderLinesDiscountNotExceedTheOrderLinesTotal"
				   service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Transactions.Baskets.Basket.EnsureOrderLinesDiscountNotExceedTheOrderLinesTotalTask, Ucommerce.Pipelines" />

	  <component id="Basket.EnsureOrderDiscountsDoesNotExceedOrderSubTotal"
	             service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
	             type="Ucommerce.Pipelines.Transactions.Baskets.Basket.EnsureOrderDiscountsDoesNotExceedOrderSubTotal, Ucommerce.Pipelines" />
		
		<component id="Basket.CalculateOrderLinesTotals"
				   service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateOrderLineTotalsTask, Ucommerce.Pipelines" />
		
		<component id="Basket.CalculateShippingTaxForShipments"
				   service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateShippingTaxForShipmentsTask, Ucommerce.Pipelines" />
		
		<component id="Basket.CalculateShippingCostForShipments"
				   service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateShippingCostForShipmentsTask, Ucommerce.Pipelines" />
		
		<component id="Basket.CalculateShippingTotalForShipments"
				   service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateShippingTotalForShipmentsTask, Ucommerce.Pipelines" />
		
		<component id="Basket.CalculateShippingTotal"
				   service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateShippingTotalTask, Ucommerce.Pipelines" />
		
		<component id="Basket.CalculatePaymentTotal"
				   service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculatePaymentTotalTask, Ucommerce.Pipelines" />
		
		<component id="Basket.CalculateOrderLineTax"
				   service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateOrderLineTaxTask, Ucommerce.Pipelines" />
		
		<component id="Basket.CalculateVATTotal"
				   service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateOrderVatTotalTask, Ucommerce.Pipelines" />
		
		<component id="Basket.CalculateOrderDiscount"
				   service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateOrderDiscountTask, Ucommerce.Pipelines" />
		
		<component id="Basket.CalculateOrderDiscountTotal"
				   service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateOrderDiscountTotalTask, Ucommerce.Pipelines" />
		
		<component id="Basket.CalculateOrderSubTotal"
				   service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateOrderSubTotalTask, Ucommerce.Pipelines" />
		
		<component id="Basket.CalculateOrderTaxTotal"
				   service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateOrderTaxTotalTask, Ucommerce.Pipelines" />
		
		<component id="Basket.CalculateOrderTotal"
				   service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateOrderTotalTask, Ucommerce.Pipelines" />

		<component id="Basket.RoundUpOrderTotalForCurrenciesWithoutDecimalDigits"
				   service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Transactions.Baskets.Basket.RoundUpOrderTotalForCurrenciesWithNoDecimalDigitsTask, Ucommerce.Pipelines" />

		<component id="Basket.CalculateOrderLineTaxRate"
				   service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculateOrderLineTaxRateTask, Ucommerce.Pipelines" />

		<component id="Basket.Save"
				   service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
				   type="Ucommerce.Pipelines.Common.SavePurchaseOrderTask, Ucommerce.Pipelines" />
  
	  <component id="Basket.CalculatePaymentFee"
           service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
	         type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculatePaymentFeeTask, Ucommerce.Pipelines" />
    
	  <component id="Basket.CalculatePaymentTax"
	         service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
	         type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculatePaymentTaxTask, Ucommerce.Pipelines" />
    
	  <component id="Basket.CalculatePaymentAmount"
	         service="Ucommerce.Pipelines.IPipelineTask`1[[Ucommerce.EntitiesV2.PurchaseOrder, Ucommerce]], Ucommerce"
	         type="Ucommerce.Pipelines.Transactions.Baskets.Basket.CalculatePaymentAmountTask, Ucommerce.Pipelines" />

	</components>
</configuration>