@model UCommerce.Sitefinity.UI.Mvc.ViewModels.ProductDetailViewModel

@using Newtonsoft.Json;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers
@using Telerik.Sitefinity.Services;

@Html.StyleSheet(Url.WidgetContent("assets/src/css/uc-vue-styles.css"), "head")
@if (Model != null)
{
    if (!SystemManager.IsDesignMode)
    {
        @Html.Script(Url.WidgetContent("assets/build/js/vendor.bundle.js"), "bottom", false)
        @Html.Script(Url.WidgetContent("assets/build/js/main.js"), "bottom", false)
    }

	<div data-component="products" id="@Html.UniqueId("products")" v-cloak>
		<input type="hidden" ref="addToBasket" value="@Html.Resource("AddToBasket", "UcommerceResources")" />
		<input type="hidden" ref="notAddToBasket" value="@Html.Resource("NotAddToBasket", "UcommerceResources")" />
		<div>
			<a href="@Model.PrimaryImageMediaUrl" rel="fancybox">
				<img src="@Model.PrimaryImageMediaUrl" />
			</a>
		</div>

		@if (Model.VariantTypes.Any())
		{
			foreach (var variantType in Model.VariantTypes)
			{
				if (variantType.Values.Any())
				{
					<ul>
						@foreach (var variant in variantType.Values)
						{
							if (!string.IsNullOrEmpty(variant.PrimaryImageMediaUrl))
							{
								<li>
									<a href="@variant.PrimaryImageMediaUrl" rel="fancybox">
										<img src="@variant.PrimaryImageMediaUrl" />
									</a>
								</li>
							}
						}
					</ul>
				}
			}
		}

		<div>
			<h1>
				@Html.HtmlSanitize((string)Model.DisplayName)
			</h1>
			<div>

				@*Beggining of Write review link section*@
				<div>
					<a href="#" onclick="return false;">@Html.Resource("WriteReview", "UcommerceResources")</a>
				</div>
				@*End of Write review link section*@
				<div>
					<span>@Model.Price</span>
					@if (!string.IsNullOrWhiteSpace(@Model.Discount))
					{
						<p>@Html.Resource("Discount", "UcommerceResources"):</p>
						<span>@Model.Discount</span>
					}
				</div>
			</div>
			<div>
				@Html.HtmlSanitize(Model.LongDescription)
			</div>

            <div>
				@{
					if (Model.VariantTypes.Any())
					{
						<script type="application/json" data-variants="true">
							{
							"variants": @Html.Raw(JsonConvert.SerializeObject(Model.VariantTypes.ToList()))
							}
						</script>

						<fieldset v-for="v in variants">
							<div>
								<label>{{v.Item.DisplayName}}</label>
								<span>
									<select v-model="v.Current" v-on:change="onChange($event, v.Current)">
										<option v-for="val in v.Item.Values" v-bind:value="val" :selected="val === v.Current ? 'selected' : ''">
											{{val.Value}}
										</option>
									</select>
								</span>
							</div>
						</fieldset>
					}
				}
			</div>

			@*Beggining of Add to cart section*@
			<div>

				@foreach (var route in Model.Routes)
				{
					<input type="hidden" class="@route.Key" value="@route.Value" />
				}

				<add-to-basket :product-sku="'@Model.Sku'" :root-id="$el.id" :selected-variants="selectedVariants">
				</add-to-basket>
			</div>

			@*End of Add to cart section *@

			@*Beggining of Add to wishlist section


			<div>
				<a href="#" onclick="return false;">@Html.Resource("AddToWishList", "UcommerceResources")</a>
			</div>
			<div style="display: none;">

			</div>
			*@
		</div>

		@*End of Add to wishlist section *@

		@*Beggining of Write review section

		<div>
			<a href="#" onclick="return false;">@Html.Resource("WriteReview", "UcommerceResources")</a>
		</div>
		*@
		@*End of Write review section*@
	</div>

    <script type="text/x-template" id="add-to-basket-template">
        <div>
            <span>@Html.Resource("Quantity", "UcommerceResources"):</span>
            <span id="ctl00_contentPlaceholder_C020_productsFrontendDetail_ctl00_ctl00_SingleItemContainer_ctrl0_addToCartWidget_ctl00_ctl00_quantityRequiredFieldValidator" style="display:none;">
                <span>
                    @Html.Resource("SpecifyQuantity", "UcommerceResources")
                </span>
            </span>
            <span id="ctl00_contentPlaceholder_C020_productsFrontendDetail_ctl00_ctl00_SingleItemContainer_ctrl0_addToCartWidget_ctl00_ctl00_quantityValidator" style="display:none;">
                <span>
                    @Html.Resource("QuantityValidation", "UcommerceResources")
                </span>
            </span>
            <input title="@Html.Resource("ProductQuantity", "UcommerceResources")" id="productQuantityInput" v-model="quantity" name="ctl00$contentPlaceholder$C020$productsFrontendDetail$ctl00$ctl00$SingleItemContainer$ctrl0$addToCartWidget$ctl00$ctl00$quantity" type="text" />

            <input type="button" title="Add to cart button" name="ctl00$contentPlaceholder$C020$productsFrontendDetail$ctl00$ctl00$SingleItemContainer$ctrl0$addToCartWidget$ctl00$ctl00$addToCartButton" value="@Html.Resource("AddToCart", "UcommerceResources")" v-on:click="addToBasket()" id="ctl00_contentPlaceholder_C020_productsFrontendDetail_ctl00_ctl00_SingleItemContainer_ctrl0_addToCartWidget_ctl00_ctl00_addToCartButton" />
            <span v-show="showAddToBasketMessage">{{addToBasketMessage}}</span>
        </div>
    </script>
}