@model dynamic

@using Newtonsoft.Json;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers
@using Telerik.Sitefinity.Services;
@using Telerik.Sitefinity.Web;
@using UCommerce.Sitefinity.UI.Mvc.ViewModels;

@Html.StyleSheet(Url.WidgetContent("assets/src/css/uc-vue-styles.css"), "head")

@if (!SystemManager.IsDesignMode)
{
    @Html.Script(Url.WidgetContent("assets/build/js/vendor.bundle.js"), "bottom", false)
    @Html.Script(Url.WidgetContent("assets/build/js/main.js"), "bottom", false)
}

<div data-component="category-navigation" id="@Html.UniqueId("categories")" v-cloak>
    <input type="hidden" value="@Model.Localizations"/>

    <script type="application/json" data-items="true">
            { "items" : @Html.Raw(JsonConvert.SerializeObject(Model.Categories)) }
        </script>
    <header>
        <div>
            <nav>
                @if (!string.IsNullOrWhiteSpace(Model.ImageUrl))
                {
                    <a href="/" alt="">
                        <img src="@Model.ImageUrl" alt="Category Navigation Logo">
                    </a>
                }

                @if (Model.Categories.Count > 0)
                {
                    <dropdown-menu :nodes="items"></dropdown-menu>
                }

                <ul>
                    @if (Model.AllowChangingCurrency && Model.Currencies.Count > 0)
                    {
                        var currencies = JsonConvert.SerializeObject(Model.Currencies);
                        var currentCurrency = JsonConvert.SerializeObject(Model.CurrentCurrency);
                        <currency-selector :serialized-currencies="'@currencies'" :serialized-current-currency="'@currentCurrency'" :root-id="$el.id">
                        </currency-selector>
                    }

                    <li v-on:click="toggleSearchBar()">
                        <a href="javascript:void(0)">
                            <span>&#128269;</span>
                        </a>
                    </li>

                </ul>
            </nav>
        </div>
        @foreach (var route in Model.Routes)
        {
            <input type="hidden" class="@route.Key" value="@route.Value"/>
        }

        <search :search-page-url="'@UrlPath.ResolveAbsoluteUrl(Model.SearchPageUrl)'" :product-details-page-id="'@Model.ProductDetailsPageId'" :root-id="$el.id" ref="search">
        </search>
    </header>
</div>

<script type="text/x-template" id="dropdown-menu-template">
    <ul>
        <li v-for="node in nodes"
            v-bind:key="node.DisplayName">
            <a v-if="node.Categories.length > 0"
               :href="node.Url"
               :id="node.DisplayName">
                {{node.DisplayName}}
            </a>
            <a v-else
               :href="node.Url">
                {{node.DisplayName}}
            </a>
            <button v-if="node.Categories.length > 0"
                    v-on:click.stop.prevent="nodeClicked(node)"
                    style="width: 25px; height: auto;">
                <span><strong>&#709;</strong></span>
            </button>
            <dropdown-submenu :parent-node="node"></dropdown-submenu>
        </li>
    </ul>
</script>

<script type="text/x-template" id="dropdown-submenu-template">
    <ul :aria-labelledby="parentNode.DisplayName">
        <li v-for="node in parentNode.Categories"
            v-bind:key="node.DisplayName">
            <a v-if="node.Categories.length > 0"
               :href="node.Url"
               :id="node.DisplayName">
                {{node.DisplayName}}
            </a>
            <a v-else
               :href="node.Url"
               v-on:click.stop>
                {{node.DisplayName}}
            </a>
            <button v-if="node.Categories.length > 0"
                    v-on:click.stop.prevent="nodeClicked(node)"
                    style="width: 25px; height: auto;">
                <span><strong>&#709;</strong></span>
            </button>
            <dropdown-submenu v-if="node.Categories.length > 0" :parent-node="node"></dropdown-submenu>
        </li>
    </ul>
</script>

<script type="text/x-template" id="currency-selector-template">
    <li>
        <span style="display: inline-block;">{{currentCurrency.DisplayName}}</span>
        <button v-on:click="toggleCurrenciesVisibility"
                style="width: 25px; height: auto;">
            <span><strong>&#709;</strong></span>
        </button>
        <ul v-show="showCurrencies">
            <li v-for="currency in currencies">
                <a href="javascript:void(0)" v-on:click="setCurrency(currency.PriceGroupId)">
                    <span>{{currency.DisplayName}}</span>
                </a>
            </li>
        </ul>
    </li>
</script>

<script type="text/x-template" id="search-template">
    <div v-show="showSearchBar">
        <div>
            <button v-on:click="closeSearch"><span>&#215;</span></button>

            <div>

                <form v-if="searchPageUrl !== ''" v-bind:action="searchPageUrl" _lpchecked="1">
                    <span>&#128269;</span>
                    <input type="text" autocomplete="off" v-model="searchQuery" focus v-on:input="search()" v-on:keyup.escape="closeSearch" required="" name="search" placeholder="Search for products">
                </form>

                <form v-if="searchPageUrl === ''" v-on:submit.prevent _lpchecked="1">
                    <span>&#128269;</span>
                    <input type="text" autocomplete="off" v-model="searchQuery" autofocus v-on:input="search()" v-on:keyup.escape="closeSearch" required="" name="search" placeholder="Search for products">
                </form>

                <div>
                    <ul v-show="searchResult.length !== 0 || suggestions.length !== 0">
                        <li v-for="suggestion in suggestions" v-on:click="searchQuery = suggestion;search()">
                            <span>
                            </span>
                            <span>
                                <span>{{suggestion}}</span>
                            </span>
                        </li>
                        <li v-for="product in searchResult">
                            <a v-bind:href="product.Url">
                                <span>
                                    <img v-bind:src="product.ThumbnailImageUrl" alt="">
                                </span>
                                <span>
                                    <span>{{product.Name}}</span>
                                </span>
                            </a>
                        </li>
                    </ul>

                    <a v-show="searchPageUrl !== ''" v-bind:href="searchPageHref()">@Html.Resource("ShowAllResults", "UcommerceResources")</a>

                </div>
            </div>

        </div>
    </div>
</script>