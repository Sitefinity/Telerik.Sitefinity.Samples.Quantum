@model Telerik.Sitefinity.Frontend.Search.Mvc.Models.ISearchBoxModel

@using Telerik.Sitefinity.Services;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;

@{
    var searchTextBoxId = Guid.NewGuid();
    var searchButtonId = Guid.NewGuid();
 }

@(!String.IsNullOrEmpty(Model.CssClass) ?
    Html.Raw(String.Format("<div class=\"{0} form-inline\">", HttpUtility.HtmlAttributeEncode(Model.CssClass))) :
    Html.Raw("<div class=\"form-inline\">"))
    <div class="form-group">
        <input type="search" title="@Html.Resource("SearchInput")" placeholder="@Model.BackgroundHint" id="@searchTextBoxId" class="form-control" value="@(ViewBag.SearchQuery)"/>
    </div>
    <button type="button" class="btn btn-primary" id="@(searchButtonId)">@Html.Resource("SearchLabel")</button>
	
	<input type="hidden" data-sf-role="resultsUrl" value="@(Model.ResultsUrl)" />
    <input type="hidden" data-sf-role="indexCatalogue" value="@(Model.IndexCatalogue)" />
    <input type="hidden" data-sf-role="disableSuggestions" value='@(Model.DisableSuggestions ? ("true") : ("false"))' />
    <input type="hidden" data-sf-role="minSuggestionLength" value="@(Model.MinSuggestionLength)" />
    <input type="hidden" data-sf-role="suggestionFields" value="@(Model.SuggestionFields)" />
    <input type="hidden" data-sf-role="language" value="@(Model.Language)" />
    <input type="hidden" data-sf-role="suggestionsRoute" value="@(Model.SuggestionsRoute)" />
    <input type="hidden" data-sf-role="searchTextBoxId" value='@("#" + searchTextBoxId.ToString())' />
    <input type="hidden" data-sf-role="searchButtonId" value='@("#" + searchButtonId.ToString())' />
</div>

@* The inline editing functionality is loading jQuery too. *@

@Html.Script(ScriptRef.JQuery, "top", true)
@Html.Script(ScriptRef.JQueryUI, "top", true)

@Html.Script(Url.WidgetContent("Mvc/Scripts/SearchBox/Search-box.js"), "bottom", true)